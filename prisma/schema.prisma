// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             Int      @id @default(autoincrement())
    user_name      String
    full_name      String?
    last_name      String?
    email          String?
    phone_number   String?
    bio            String?
    user_type      userType
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt

    seller         Seller[]
    wishlists      Wishlist[]
    productReviews ProductReview[]
    carts          Cart[]

    @@index([user_name])
}

model Seller {
    id             Int      @id @default(autoincrement())
    user           User     @relation(fields: [userId], references: [id])
    userId         Int
    is_verified    Boolean
    product        Product[]
    rating         Float?
    review_count   Int?

    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model Product {
    id             Int      @id @default(autoincrement())
    name           String
    description    String?
    price          Float
    stock          Int
    is_wholesaled  Boolean  @default(false)
    bulk_price     Float?
    minimum_quantity Int? 
    category       Category @relation(fields: [categoryId], references: [id])
    categoryId     Int
    seller         Seller   @relation(fields: [sellerId], references: [id])
    sellerId       Int
    wishList       Wishlist[]
    productReviews ProductReview[]
    carts          Cart[]

    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model Category {
    id             Int      @id @default(autoincrement())
    name           String
    description    String?
    product        Product[]

    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model Wishlist {
    id             Int      @id @default(autoincrement())
    user           User     @relation(fields: [userId], references: [id])
    userId         Int
    product        Product  @relation(fields: [productId], references: [id])
    productId      Int

    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model Cart {
    id             Int      @id @default(autoincrement())
    user           User     @relation(fields: [userId], references: [id])
    userId         Int
    product        Product  @relation(fields: [productId], references: [id])
    productId      Int
    quantity       Int
    total_price    Float

    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt

}

model ProductReview {
    id             Int      @id @default(autoincrement())
    user           User     @relation(fields: [userId], references: [id])
    userId         Int
    product        Product  @relation(fields: [productId], references: [id])
    productId      Int
    rating         Float
    review         String

    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

enum userType {
  seller
  buyer
}

